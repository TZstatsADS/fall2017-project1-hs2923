InaugurationInfo[which(is.na(InaugurationInfo$Date)),]$Date
which(is.na(InaugurationInfo$Date)) & InaugurationInfo$Term == 2
which(is.na(InaugurationInfo$Date) & InaugurationInfo$Term == 2)
dates.speeches.temp2 <- dates.speeches[,1:3]
View(dates.speeches.temp2)
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
ates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
library(tm)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
ates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
View(dates.speeches.temp)
InaugurationInfo <- merge(InaugurationInfo, dates.speeches.temp, all.x = T, all.y = F, by.x = c("President", "Term"), by.y = c("President", "Term"))
rm(dates.speeches.temp, dates.speeches.temp2)
rm(ates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[22:23,1] <- "Grover Cleveland"
InaugurationInfo[22,1] <- "Grover Cleveland"
InaugurationInfo[22,1] <- as.factor("Grover Cleveland")
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[22,1] <- as.factor("Grover Cleveland")
InaugurationInfo[22:23,1] <- as.factor("Grover Cleveland")
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[22:23,1] <- as.factor("Grover Cleveland")
InaugurationInfo <- merge(InaugurationInfo, dates.speeches.temp, all.x = T, all.y = F, by.x = c("President", "Term"), by.y = c("President", "Term"))
rm(dates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[22:23,1] <- as.character("Grover Cleveland")
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[c(25,27),1] <- as.character("Grover Cleveland")
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[c(25,27),1] <- as.character("Grover Cleveland")
InaugurationInfo <- merge(InaugurationInfo, dates.speeches.temp, all.x = T, all.y = F, by.x = c("President", "Term"), by.y = c("President", "Term"))
rm(dates.speeches.temp, dates.speeches.temp2)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
library(tm)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[c(25,27),1] <- as.character("Grover Cleveland")
InaugurationInfo <- merge(InaugurationInfo, dates.speeches.temp, all.x = T, all.y = F, by.x = c("President", "Term"), by.y = c("President", "Term"))
rm(dates.speeches.temp, dates.speeches.temp2)
library(tm)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[c(25,27),1] <- as.character("Grover Cleveland")
InaugurationInfo[,1] <- as.character(InaugurationInfo[,1])
InaugurationInfo[c(25,27),1] <- as.character("Grover Cleveland")
InaugurationInfo[13,1] <- as.character("Martin Van Buren")
InaugurationInfo[c(46,47),1] <- as.character("Richard M. Nixon")
InaugurationInfo <- merge(InaugurationInfo, dates.speeches.temp, all.x = T, all.y = F, by.x = c("President", "Term"), by.y = c("President", "Term"))
rm(dates.speeches.temp, dates.speeches.temp2)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
for(i in 2:5) {
dates.speeches[,i] <- as.Date(dates.speeches[,i],"%m/%d/%Y")
}
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
names(dates.speeches) <- c("President","Date","Date","Date","Date")
dates.speeches.temp <- dates.speeches[,1:2]
dates.speeches.temp$Term <- rep(1, nrow(dates.speeches.temp))
dates.speeches.temp2 <- dates.speeches[,c(1,3)]
dates.speeches.temp2$Term <- rep(2, nrow(dates.speeches.temp))
dates.speeches.temp <- rbind(dates.speeches.temp, dates.speeches.temp2)
rm(dates.speeches.temp, dates.speeches.temp2)
meta(ovid.t)
meta(ovid.t[1])
meta(ovid.t[[1]])
DublinCore(ovid.t[[1]], "Creator")
?DublinCore
DublinCore(ovid.t[[1]], "Creator") <- all.files[1]
DublinCore(ovid.t[[1]], "Creator")
all.files
inspect(ovid.t)
inspect(ovid.t[1])
View(InaugurationInfo)
meta(ovid.t, "Creator") <- InaugurationInfo[,1]
meta(ovid.t)
meta(ovid.t[1])
meta(ovid.t[[1])
meta(ovid.t[[1]])
meta(ovid.t, "author") <- InaugurationInfo[,1]
meta(ovid.t[[1]])
?meta
?meta
meta(ovid.t, tag = "Term", "SpeechDate") <- dates.speeches[,2]
meta(ovid.t, tag = "Term")
data("crude")
meta(crude[[1]])
DublinCore(crude[[1]])
DublinCore(ovid.t[[1]])
meta(crude[[1]], tag = "topics")
meta(crude[[1]], tag = "comment") <- "A short comment."
meta(crude[[1]], tag = "topics") <- NULL
DublinCore(crude[[1]], tag = "creator") <- "Ano Nymous"
DublinCore(crude[[1]], tag = "format") <- "XML"
DublinCore(crude[[1]])
meta(crude[[1]])
meta(crude)
rm(list=ls())
library(tm)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
directory <- "D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/output/R Notebook/InauguralSpeeches"
doc <- DirSource(directory = directory, encoding = "UTF-8", pattern = "\\.txt$")
ovid <- VCorpus(doc, readerControl = list(language = "en"))
ovid.t <- ovid
ovid.t <- tm_map(ovid.t, content_transformer(tolower))
ovid.t <- tm_map(ovid.t, removeWords, stopwords("english"))
ovid.t <- tm_map(ovid.t, removePunctuation, preserve_intra_word_dashes = T)
ovid.t <- tm_map(ovid.t, stripWhitespace)
meta(ovid.t, "Creator") <- InaugurationInfo[,1]
meta(ovid.t, tag = "Term")
ovid.t <- ovid
ovid.t <- tm_map(ovid.t, content_transformer(tolower))
ovid.t <- tm_map(ovid.t, removeWords, stopwords("english"))
ovid.t <- tm_map(ovid.t, removePunctuation, preserve_intra_word_dashes = T)
ovid.t <- tm_map(ovid.t, stripWhitespace)
meta(ovid.t)
DublinCore(ovid.t)
DublinCore(ovid.t[1])
InaugurationInfo[,1]
as.character(InaugurationInfo[,1])
meta(ovid.t, "Creator") <- as.character(InaugurationInfo[,1])
DublinCore(ovid.t[1])
meta(ovid.t[1])
DublinCore(ovid.t, "Creator") <- as.character(InaugurationInfo[,1])
DublinCore(ovid.t[1])
DublinCore(ovid.t[2])
dtm <- DocumentTermMatrix(ovid.t)
inspect(dtm[5:10, 740:743])
inspect(dtm[5:10, 1:2])
inspect(dtm[1:10, 1:2])
inspect(dtm[1:10, 1:15])
dtm <- TermDocumentMatrix(ovid.t)
inspect(dtm[1:10, 1:15])
inspect(dtm[100:110, 1:15])
inspect(dtm[100:110, 1:3])
dtm <- DocumentTermMatrix(ovid.t)
inspect(dtm[1:10, 1:15])
inspect(dtm[10:15, 1:15])
inspect(dtm[10:12, 100:110])
dim(dtm)
inspect(dtm)
findFreqTerms(dtm, 5)
findFreqTerms(dtm, 20)
findFreqTerms(dtm, 30)
findFreqTerms(dtm, 40)
findFreqTerms(dtm, 50)
findFreqTerms(dtm, 80)
findFreqTerms(dtm, 100)
findFreqTerms(dtm, 120)
findFreqTerms(dtm, 150)
findFreqTerms(dtm, 180)
findFreqTerms(dtm, 200)
findFreqTerms(dtm, 250)
findAssocs(dtm, "war", 0.8)
findAssocs(dtm, "union", 0.8)
findAssocs(dtm, "can", 0.8)
findAssocs(dtm, "can", 0.6)
findAssocs(dtm, "must", 0.6)
findAssocs(dtm, "freet", 0.6)
findAssocs(dtm, "free", 0.6)
findAssocs(dtm, "free", 0.8)
findAssocs(dtm, "free", 0.7)
findAssocs(dtm, "free", 0.62)
inspect(removeSparseTerms(dtm, 0.4))
dtm <- removeSparseTerms(dtm, 0.4)
findFreqTerms(dtm, 150)
DublinCore(ovid.t, "PoliticalParty") <- as.character(InaugurationInfo[,4])
DublinCore(ovid.t, "Id")
DublinCore(ovid.t[1])
DublinCore(ovid.t[1], "id")
?gsub
gsub("inaug",DublinCore(ovid.t[1], "id"))
gsub("inaug",DublinCore(ovid.t[[1]], "id"))
gsub("inaug", "", DublinCore(ovid.t[[1]], "id"))
?substr
substr(DublinCore(ovid.t[[1]], "id", "inaug", 50, ))
DublinCore(ovid.t[[1]])
DublinCore(ovid.t[[1]], "id")
gsub("inaug", "", DublinCore(ovid.t[[1]], "id"))
grep(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
end.pattern <- "\-"
grep(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
end.pattern <- "\-"
end.pattern <- c("\-")
end.pattern <- c("\-")
end.pattern <- "/-"
grep(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
end.pattern <- "-"
grep(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
?grep
grepl(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
regexpr(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)
DublinCore(ovid.t[[1]], "id")
strsplit(DublinCore(ovid.t[[1]], "id"),(regexpr(DublinCore(ovid.t[[1]], "id"), pattern = end.pattern)))
?strsplit
strsplit(DublinCore(ovid.t[[1]], "id"),end.pattern)
end.pattern <- "-|."
strsplit(DublinCore(ovid.t[[1]], "id"),end.pattern)
end.pattern <- "-|\."
strsplit(DublinCore(ovid.t[[1]], "id"),end.pattern)
end.pattern <- "-|/."
strsplit(DublinCore(ovid.t[[1]], "id"),end.pattern)
end.pattern <- "-&/."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "-"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
strsplit(DublinCore(ovid.t[[1]], "id"), c(end.pattern, "."))
end.pattern <- "- | \."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "- | \\."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "- | \."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "- | \."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "- | ."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "- | \\."
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "-"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "-\[[:punct:]]"
end.pattern <- "-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "5-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "inaug|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "inaug|[a-z][A-Z]|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "^inaug|[a-z][A-Z]|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "inaug|[a-z][A-Z]|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern, fixed = T)
end.pattern <- "inaug|[a-z][A-Z]|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
end.pattern <- "inaug|-|[[:punct:]]"
strsplit(DublinCore(ovid.t[[1]], "id"), end.pattern)
library(wordcloud)
install.packages("worldcloud")
install.packages("wordcloud")
wordcloud(tm_map(corpus,PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(6,"Dark2"))
library(wordcloud)
wordcloud(tm_map(corpus,PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(6,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(6,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F)
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(2,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=25, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(8,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=80, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=brewer.pal(8,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=80, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=100, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
?pca
?prcomp
PCA.model <- prcomp(dtm)
PCA.model
PCA.model <- prcomp(t(dtm))
PCA.model
plot(y = PCA.model$sdev)
plot(PCA.model$sdev)
plot(PCA.model$sdev, type = "l")
?plot
?t
points(PCA.model$sdev, type = "l")
points(PCA.model$sdev, type = "l", pch = 21)
points(PCA.model$sdev, type = "l", pch = 22)
points(PCA.model$sdev, pch = 22)
points(PCA.model$sdev, pch = 21)
points(PCA.model$sdev, pch = 23)
points(PCA.model$sdev, pch = 24)
points(PCA.model$sdev, pch = 24)
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=100, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
points(PCA.model$sdev, pch = 24)
plot(PCA.model$sdev, type = "l")
points(PCA.model$sdev, pch = 22)
points(PCA.model$sdev, pch = 22, col = "red")
points(PCA.model$sdev, pch = 22, bg = "red")
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
summary(PCA.model)
plot(summary(PCA.model)$Cumulative, type = "l", col = "blue")
PCA.model.summary <- summary(PCA.model)
plot(PCA.model.summary$importance, type = "l", col = "blue")
PCA.model.summary <- summary(PCA.model)
PCA.model.summary
cum <- cumsum(PCA.model$sdev)
plot(cum/sum(PCA.model$sdev), type = "l", col = "blue")
sum(PCA.model$sdev)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
PCA.model.summary
PCA.model.summary[1:2]
PCA.model.summary <- summary(PCA.model)
PCA.model.summary[1:2]
PCA.model.summary[,1:2]
PCA.model.summary
head(PCA.model.summary,3)
PCA.model.summary
PCA.model$sdev
PCA.model$sdev/sum(PCA.model$sdev)
summary(PCA.model.summary)
summary(PCA.model)
PCA.model$x
plot(PCA.model$x[,1:2])
PCA.model$x[,1:2]
dim(PCA.model$x[,1:2])
PCA.model <- prcomp(dtm)
summary(PCA.model)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
plot(PCA.model$x[,1:2])
PCA.model$x[,1:2]
?text
text(PCA.model$x[,1],PCA.model$x[,2], labels = dtm[,1])
plot(PCA.model$x[,1:2])
text(PCA.model$x[,1],PCA.model$x[,2], labels = dtm[,1])
PCA.model$x[,2]
plot(PCA.model$x[,1:2])
dtm[,1]
PCA.model
plot(PCA.model$x[,1:2])
text(PCA.model$x[,1],PCA.model$x[,2], labels = row.names(PCA.model$x))
text(PCA.model$x[,1],PCA.model$x[,2], labels = row.names(PCA.model$x), cex = 0.3)
plot(PCA.model$x[,1:2])
text(PCA.model$x[,1],PCA.model$x[,2], labels = row.names(PCA.model$x), cex = 0.3)
plot(PCA.model$x[,1:2])
text(PCA.model$x[,1],PCA.model$x[,2], labels = row.names(PCA.model$x), cex = 0.7)
dim(dtm)
rm(list=ls())
library(tm)
library(wordcloud)
dates.speeches <- read.table("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguationDates.txt", header = T, skip = 1, sep = "\t")
InaugurationInfo <- read.csv("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InaugurationInfo.csv")
directory <- "D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/output/R Notebook/InauguralSpeeches"
doc <- DirSource(directory = directory, encoding = "UTF-8", pattern = "\\.txt$")
ovid <- VCorpus(doc, readerControl = list(language = "en"))
ovid.t <- ovid
ovid.t <- tm_map(ovid.t, content_transformer(tolower))
ovid.t <- tm_map(ovid.t, removeWords, stopwords("english"))
ovid.t <- tm_map(ovid.t, removePunctuation, preserve_intra_word_dashes = T)
ovid.t <- tm_map(ovid.t, stripWhitespace)
dtm <- DocumentTermMatrix(ovid.t)
dim(dtm)
inspect(dtm)
findFreqTerms(dtm, 150)
dtm <- removeSparseTerms(dtm, 0.4)
dim(dtm)
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=100, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
PCA.model <- prcomp(dtm)
summary(PCA.model)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
plot(PCA.model$x[,1:2])
text(PCA.model$x[,1],PCA.model$x[,2], labels = row.names(PCA.model$x), cex = 0.7)
type(dtm)
dtm.df <- as.data.frame(dtm)
dtm
inspect(dtm)
head(as.matrix(dtm))
dtm.df <- as.data.frame(as.matrix(dtm))
View(dtm.df)
plot(PCA.model$x[,1:2])
PCA.model$x[,1:2]
install.packages("fpc")
library(fpc)
?pam
View(dtm.df)
View(InaugurationInfo)
InaugurationInfo$Key <- rep(NA, nrow(InaugurationInfo))
?paste
paste("inaug", InaugurationInfo$File, sep = "")
paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, sep = "")
paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
View(dtm.df)
?merge
InaugurationInfo[,c(3,6)]
dtm.df$Key <- rownames(dtm.df)
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(3,6)])
dtm.df <- as.data.frame(as.matrix(dtm))
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
dtm.df <- as.data.frame(as.matrix(dtm))
dtm.df$Key <- rownames(dtm.df)
intersect(names(x), names(y))
intersect(names(dtm.df), names(InaugurationInfo))
InaugurationInfo[,c(4,6)]
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
plot(PCA.model$x[,1:2], col = dtm.df$Party)
plot(PCA.model$x[,1:2], col = dtm.df$Party, pch = 22, bg = "red")
plot(PCA.model$x[,1:2], col = dtm.df$Party, pch = 21, bg = "red")
plot(PCA.model$x[,1:2], col = dtm.df$Party, pch = 21, bg = dtm.df$Party)
legend("topright", legend = as.factor(dtm.df$Party))
plot(PCA.model$x[,1:2], col = dtm.df$Party, pch = 21, bg = dtm.df$Party)
legend("topright", legend = dtm.df$Party)
library(ggplot2)
ggplot(PCA.model$x[,1:2]) +
geom_point(shape = 21, col = dtm.df$Party)
ggplot(data = PCA.model$x[,1:2]) +
geom_point(shape = 21, col = dtm.df$Party)
ggplot(data = as.data.frame(PCA.model$x[,1:2])) +
geom_point(shape = 21, col = dtm.df$Party)
PCA.model$x[,1:2]
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(shape = 21, col = dtm.df$Party)
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(shape = 21)
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(shape = 21, colours = as.factor(dtm.df$Party))
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(shape = 21, col = as.factor(dtm.df$Party))
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(shape = 21, aes(col = as.factor(dtm.df$Party)))
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
summary(PCA.model)
summary(PCA.model)[,1]
summary(PCA.model)$Importance[1]
summary(PCA.model)$Importance[2]
summary(PCA.model)[1]$Importance[2]
summary(PCA.model)[1]
summary(PCA.model)[2]
summary(PCA.model)[3]
View(dates.speeches)
?pam
Cluster.model <- pam(dtm, 2)
?pamk
Cluster.model <- pamk(dtm)
Cluster.model$pamobject
Cluster.model$nc
Cluster.model <- kmeans(dtm, 4)
Cluster.model <- kmeans(dtm, 4)
Cluster.model$cluster
Cluster.model$centers
?kmeans
Cluster.model <- kmeans(dtm, 4)
Cluster.model2 <- kmeans(dtm, 3)
cluster.stats(dtm, Cluster.model$cluster, Cluster.model2$cluster)
dtm.df$Cluster1 <- Cluster.model$cluster
dtm.df$Cluster2 <- Cluster.model2$cluster
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster1)))
Cluster.model <- kmeans(dtm, 3)
Cluster.model2 <- kmeans(dtm, 4)
dtm.df$Cluster1 <- Cluster.model$cluster
dtm.df$Cluster2 <- Cluster.model2$cluster
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster1)))
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster1)))
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster2)))
