points(PCA.model$sdev, pch = 22, bg = "red")
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
dtm <- removeSparseTerms(dtm, 0.4)
dim(dtm)
dtm.df <- as.data.frame(as.matrix(dtm))
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df)
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
PCA.model <- prcomp(dtm)
summary(PCA.model)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
PCA.model <- prcomp(dtm)
PCA.model
dtm <- removeSparseTerms(dtm, 0.45)
dim(dtm)
dtm.df <- as.data.frame(as.matrix(dtm))
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df)
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
PCA.model <- prcomp(dtm)
summary(PCA.model)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
dtm <- removeSparseTerms(dtm, 0.5)
dim(dtm)
dtm.df <- as.data.frame(as.matrix(dtm))
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df)
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
PCA.model <- prcomp(dtm)
summary(PCA.model)
plot(PCA.model$sdev, type = "l", col = "blue")
points(PCA.model$sdev, pch = 22, bg = "red")
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df) #Creates a key which will be used to link the tables
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
View(dates.speeches)
ds1 <- dates.speeches[,1:2]
View(ds1)
ds2 <- dates.speeches[,c(1,3)]
ds3 <- dates.speeches[,c(1,4)]
ds1 <- dates.speeches[,1:2]
ds2 <- dates.speeches[,c(1,3)]
ds3 <- dates.speeches[,c(1,4)]
ds4 <- dates.speeches[,c(1,5)]
View(ds4)
?reshape
ds <- reshape(dates.speeches)
ds <- reshape(dates.speeches, direction = "long")
ds <- reshape(dates.speeches, direction = "long", varying = "SECOND")
ds <- reshape(dates.speeches, direction = "long", varying = "SECOND", timevar = 2)
ds <- reshape(dates.speeches, direction = "long", varying = "SECOND", timevar = c(1,2))
ds <- reshape(dates.speeches, direction = "long", varying = "SECOND", v.names = 2 )
View(ds)
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
View(wide)
reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long")
View(wide)
View(dates.speeches)
ds <- reshape(dates.speeches, direction = "long", varying = "SECOND", v.names = 2, idvar = "PRESIDENT")
ds <- reshape(dates.speeches, direction = "long", varying = List(2:5), v.names = "SpeechDates", idvar = "PRESIDENT")
ds <- reshape(dates.speeches, direction = "long", varying = list(2:5), v.names = "SpeechDates", idvar = "PRESIDENT")
ds <- reshape(dates.speeches, direction = "long", varying = list(2:5), v.names = "SpeechDates")
rm(ds1,ds2,ds3,ds4)
ds <- reshape(dates.speeches, direction = "long", varying = list(2:5), v.names = "SpeechDates")
ds <- ds[!ds$SpeechDates == "",]
ds <- ds[!ds$SpeechDates == "", c(1:3)]
rm(list=ls())
# Chunk 1
set.seed(0)
packages.used=c("tm", "wordcloud", "fpc",
"ggplot2", "RCurl", "xlsx", "MASS","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(fpc)
library(ggplot2)
library(RCurl)
library(xlsx)
library(MASS)
library(topicmodels)
# Chunk 2
#Reading file with speech dates from local directory
user.dir <- setwd("Directory")
dir1 <- "./data/InauguationDates.txt"
dates.speeches <- read.table(dir1, header = T, skip = 1, sep = "\t")
#Reading Information file from local directory
dir2 <- "./data/InaugurationInfo.xlsx"
InaugurationInfo <- read.xlsx(dir2, sheetIndex = 1)
rm(dir1,dir2)
# Chunk 3: setup
#Importing Speech data
dir3 <- "D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguralSpeeches"
doc <- DirSource(directory = dir3, encoding = "UTF-8", pattern = "\\.txt$"); rm(dir3)
ovid <- VCorpus(doc, readerControl = list(language = "en"))
# Chunk 4
ovid
inspect(ovid[1])
# Chunk 5
ovid.t <- ovid   #Renaming corpus
ovid.t <- tm_map(ovid.t, content_transformer(tolower))
ovid.t <- tm_map(ovid.t, removeWords, stopwords("english"))
ovid.t <- tm_map(ovid.t, removePunctuation, preserve_intra_word_dashes = T)
ovid.t <- tm_map(ovid.t, stripWhitespace)
# Chunk 6
dtm <- DocumentTermMatrix(ovid.t) #Function to create matrix
dim(dtm)
# Chunk 7
inspect(dtm[1:5, 10:13])
# Chunk 8
findFreqTerms(dtm, 150)
# Chunk 9
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=100, scale=c(5,2),
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
# Chunk 10
dtm <- removeSparseTerms(dtm, 0.5)
dim(dtm)
inspect(dtm[1:5, 10:13])
dtm.df <- as.data.frame(as.matrix(dtm))
# Chunk 11
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df) #Creates a key which will be used to link the tables
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
#Reshape and adequate the dataframe format before merging
ds <- reshape(dates.speeches, direction = "long", varying = list(2:5), v.names = "SpeechDates")
ds <- ds[!ds$SpeechDates == "", c(1:3)]
ds$SpeechDates <- as.Date(ds$SpeechDates, "%m/%d/%Y")
names(ds) <- c("President", "Term", "SpeechDate")
ds$Key <- paste("inaug", sapply(ds$President, gsub, pattern = " ", replacement = ""), "-",ds$Term, ".txt", sep = "")
# Chunk 12
par(mfrow = c(1,2))
wordcloud(words = names(dtm.df[which(dtm.df$Party == "Democratic"), which(sapply(dtm.df, is.numeric))]), freq = colSums(dtm.df[which(dtm.df$Party == "Democratic"), which(sapply(dtm.df, is.numeric))]), min.freq=60, scale=c(5,1), random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
text(labels = "Democrats", x = 0.5, y = 1.1, cex = 2)
wordcloud(words = names(dtm.df[which(dtm.df$Party == "Republican"), which(sapply(dtm.df, is.numeric))]), freq = colSums(dtm.df[which(dtm.df$Party == "Republican"), which(sapply(dtm.df, is.numeric))]), min.freq=60, scale=c(5,1), random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
text(labels = "Republicans", x = 0.5, y = 1.1, cex = 2)
# Chunk 13
dtm.df$Party <- ifelse(dtm.df$Party == "Republican" | dtm.df$Party == "Democratic", as.character(dtm.df$Party), "Other")
# Chunk 14
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
# Chunk 15
table(dtm.df[ ,c("Party", "Cluster2")])
# Chunk 16
table(dtm.df[ ,c("Party", "Cluster3")])
# Chunk 17
table(dtm.df[ ,c("Party", "Cluster4")])
# Chunk 18
PCA.model <- prcomp(dtm)
plot((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, type = "l", col = "blue", ylab = "Prop. of Variance", xlab = "PC")
points((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, pch = 22, bg = "red")
# Chunk 19
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
#2 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster2)))
#3 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster3)))
#4 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster4)))
# Chunk 20
#Set parameters for Gibbs sampling
burnin <- 4000
iter <- 2000
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
k <- 4
LDA.model <-LDA(dtm, k, method="Gibbs", control = list(nstart = nstart,
seed = seed, best = best,
burnin = burnin, iter = iter,
thin = thin))
# Chunk 21
LDA.model.topics <- as.matrix(topics(LDA.model))
table(c(1:k, LDA.model.topics))
#write.csv(LDA.model.topics, file = paste("./output/LDAGibbs", k, "DocsToTopics.csv"))
# Chunk 22
#top 20 terms in each topic
LDA.model.terms <- as.matrix(terms(LDA.model, 20))
#write.csv(LDA.model.terms, file = paste("./output/LDAGibbs", k, "TopicsToTerms.csv"))
#probabilities associated with each topic assignment
LDA.model.prob <- as.data.frame(LDA.model@gamma)
#write.csv(LDA.model.prob, file = paste("./output/LDAGibbs", k, "TopicProbabilities.csv"))
head(LDA.model.terms)
# Chunk 23
topics.names <- c("Government", "Liberalism", "Patriotism", "Belief")
#Find relative importance of top 2 topics
topic1ToTopic2 <- lapply(1:nrow(dtm), function(x)
sort(LDA.model.prob[x,])[k]/sort(LDA.model.prob[x,])[k-1])
#write to file
#write.csv(topic1ToTopic2, file = paste("./output/LDAGibbs", k, "Topic1ToTopic2.csv"))
# Chunk 24
#Merge the topic information with previous dataframe
LDA.model.topics.df <- as.data.frame(as.matrix(topics(LDA.model)))
LDA.model.topics.df$Key <- rownames(as.matrix(topics(LDA.model)))
names(LDA.model.topics.df) <- c(paste("Topic ",k), "Key")
LDA.model.topics.df$TopicName <- topics.names[LDA.model.topics.df$Topic]
dtm.df <- merge(x = dtm.df, y = LDA.model.topics.df)
table(dtm.df$Party, dtm.df$TopicName)
# Chunk 25
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$TopicName)))
# Chunk 26
k <- 10
LDA.model <-LDA(dtm, k, method="Gibbs", control = list(nstart = nstart,
seed = seed, best = best,
burnin = burnin, iter = iter,
thin = thin))
LDA.model.topics <- as.matrix(topics(LDA.model))
table(c(1:k, LDA.model.topics))
#write.csv(LDA.model.topics, file = paste("./output/LDAGibbs", k, "DocsToTopics.csv"))
#top 20 terms in each topic
LDA.model.terms <- as.matrix(terms(LDA.model, 20))
#write.csv(LDA.model.terms, file = paste("./output/LDAGibbs", k, "TopicsToTerms.csv"))
#probabilities associated with each topic assignment
LDA.model.prob <- as.data.frame(LDA.model@gamma)
#write.csv(LDA.model.prob, file = paste("./output/LDAGibbs", k, "TopicProbabilities.csv"))
head(LDA.model.terms)
# Chunk 27
topics.names <- c("Liberalism", "Law", "Belief", "Progress", "Union", "Nation", "Government", "America", "Conflict", "Country" )
#Find relative importance of top 2 topics
topic1ToTopic2 <- lapply(1:nrow(dtm), function(x)
sort(LDA.model.prob[x,])[k]/sort(LDA.model.prob[x,])[k-1])
#write to file
#write.csv(topic1ToTopic2, file = paste("./output/LDAGibbs", k, "Topic1ToTopic2.csv"))
#Merge the topic information with previous dataframe
LDA.model.topics.df <- as.data.frame(as.matrix(topics(LDA.model)))
LDA.model.topics.df$Key <- rownames(as.matrix(topics(LDA.model)))
names(LDA.model.topics.df) <- c(paste("Topic ",k), "Key")
LDA.model.topics.df$TopicName2 <- topics.names[LDA.model.topics.df$Topic]
dtm.df <- merge(x = dtm.df, y = LDA.model.topics.df)
table(dtm.df$Party, dtm.df$TopicName2)
table(dtm.df$TopicName2, dtm.df$Party)
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$TopicName2)))
table(dtm.df[ ,c("Party", "Cluster2")])
table(dtm.df[ ,c("Party", "Cluster2")])
View(dtm.df)
table(dtm.df[ ,c("Party", "Cluster2")])
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
table(dtm.df[ ,c("Party", "Cluster2")])
names(dtm.df)
user.dir <- setwd("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923")
dir1 <- "./data/InauguationDates.txt"
dates.speeches <- read.table(dir1, header = T, skip = 1, sep = "\t")
rm(list=ls())
# Chunk 1
set.seed(0)
packages.used=c("tm", "wordcloud", "fpc",
"ggplot2", "RCurl", "xlsx", "MASS","topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(fpc)
library(ggplot2)
library(RCurl)
library(xlsx)
library(MASS)
library(topicmodels)
# Chunk 2
#Reading file with speech dates from local directory
user.dir <- setwd("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923")
dir1 <- "./data/InauguationDates.txt"
dates.speeches <- read.table(dir1, header = T, skip = 1, sep = "\t")
#Reading Information file from local directory
dir2 <- "./data/InaugurationInfo.xlsx"
InaugurationInfo <- read.xlsx(dir2, sheetIndex = 1)
rm(dir1,dir2)
# Chunk 3: setup
#Importing Speech data
dir3 <- "D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/fall2017-project1-hs2923/data/InauguralSpeeches"
doc <- DirSource(directory = dir3, encoding = "UTF-8", pattern = "\\.txt$"); rm(dir3)
ovid <- VCorpus(doc, readerControl = list(language = "en"))
# Chunk 4
ovid
inspect(ovid[1])
# Chunk 5
ovid.t <- ovid   #Renaming corpus
ovid.t <- tm_map(ovid.t, content_transformer(tolower))
ovid.t <- tm_map(ovid.t, removeWords, stopwords("english"))
ovid.t <- tm_map(ovid.t, removePunctuation, preserve_intra_word_dashes = T)
ovid.t <- tm_map(ovid.t, stripWhitespace)
# Chunk 6
dtm <- DocumentTermMatrix(ovid.t) #Function to create matrix
dim(dtm)
# Chunk 7
inspect(dtm[1:5, 10:13])
# Chunk 8
findFreqTerms(dtm, 150)
# Chunk 9
wordcloud(tm_map(ovid.t, PlainTextDocument), min.freq=100, scale=c(5,2),
random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
# Chunk 10
dtm <- removeSparseTerms(dtm, 0.5)
dim(dtm)
inspect(dtm[1:5, 10:13])
dtm.df <- as.data.frame(as.matrix(dtm))
# Chunk 11
InaugurationInfo$Key <- paste("inaug", InaugurationInfo$File, "-",InaugurationInfo$Term, ".txt", sep = "")
dtm.df$Key <- rownames(dtm.df) #Creates a key which will be used to link the tables
dtm.df <- merge(x = dtm.df, y = InaugurationInfo[,c(4,6)])
#Reshape and adequate the dataframe format before merging
ds <- reshape(dates.speeches, direction = "long", varying = list(2:5), v.names = "SpeechDates")
ds <- ds[!ds$SpeechDates == "", c(1:3)]
ds$SpeechDates <- as.Date(ds$SpeechDates, "%m/%d/%Y")
names(ds) <- c("President", "Term", "SpeechDate")
ds$Key <- paste("inaug", sapply(ds$President, gsub, pattern = " ", replacement = ""), "-",ds$Term, ".txt", sep = "")
# Chunk 12
par(mfrow = c(1,2))
wordcloud(words = names(dtm.df[which(dtm.df$Party == "Democratic"), which(sapply(dtm.df, is.numeric))]), freq = colSums(dtm.df[which(dtm.df$Party == "Democratic"), which(sapply(dtm.df, is.numeric))]), min.freq=60, scale=c(5,1), random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
text(labels = "Democrats", x = 0.5, y = 1.1, cex = 2)
wordcloud(words = names(dtm.df[which(dtm.df$Party == "Republican"), which(sapply(dtm.df, is.numeric))]), freq = colSums(dtm.df[which(dtm.df$Party == "Republican"), which(sapply(dtm.df, is.numeric))]), min.freq=60, scale=c(5,1), random.color=T, max.word=60, random.order=F,colors=brewer.pal(8,"Dark2"))
text(labels = "Republicans", x = 0.5, y = 1.1, cex = 2)
# Chunk 13
dtm.df$Party <- ifelse(dtm.df$Party == "Republican" | dtm.df$Party == "Democratic", as.character(dtm.df$Party), "Other")
# Chunk 14
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
# Chunk 15
table(dtm.df[ ,c("Party", "Cluster2")])
# Chunk 16
table(dtm.df[ ,c("Party", "Cluster3")])
# Chunk 17
table(dtm.df[ ,c("Party", "Cluster4")])
# Chunk 18
PCA.model <- prcomp(dtm)
plot((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, type = "l", col = "blue", ylab = "Prop. of Variance", xlab = "PC")
points((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, pch = 22, bg = "red")
# Chunk 19
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Party)))
#2 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster2)))
#3 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster3)))
#4 Clusters
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$Cluster4)))
# Chunk 20
#Set parameters for Gibbs sampling
burnin <- 4000
iter <- 2000
thin <- 500
seed <-list(2003,5,63,100001,765)
nstart <- 5
best <- TRUE
k <- 4
LDA.model <-LDA(dtm, k, method="Gibbs", control = list(nstart = nstart,
seed = seed, best = best,
burnin = burnin, iter = iter,
thin = thin))
# Chunk 21
LDA.model.topics <- as.matrix(topics(LDA.model))
table(c(1:k, LDA.model.topics))
#write.csv(LDA.model.topics, file = paste("./output/LDAGibbs", k, "DocsToTopics.csv"))
# Chunk 22
#top 20 terms in each topic
LDA.model.terms <- as.matrix(terms(LDA.model, 20))
#write.csv(LDA.model.terms, file = paste("./output/LDAGibbs", k, "TopicsToTerms.csv"))
#probabilities associated with each topic assignment
LDA.model.prob <- as.data.frame(LDA.model@gamma)
#write.csv(LDA.model.prob, file = paste("./output/LDAGibbs", k, "TopicProbabilities.csv"))
head(LDA.model.terms)
# Chunk 23
topics.names <- c("Government", "Liberalism", "Patriotism", "Belief")
#Find relative importance of top 2 topics
topic1ToTopic2 <- lapply(1:nrow(dtm), function(x)
sort(LDA.model.prob[x,])[k]/sort(LDA.model.prob[x,])[k-1])
#write to file
#write.csv(topic1ToTopic2, file = paste("./output/LDAGibbs", k, "Topic1ToTopic2.csv"))
# Chunk 24
#Merge the topic information with previous dataframe
LDA.model.topics.df <- as.data.frame(as.matrix(topics(LDA.model)))
LDA.model.topics.df$Key <- rownames(as.matrix(topics(LDA.model)))
names(LDA.model.topics.df) <- c(paste("Topic ",k), "Key")
LDA.model.topics.df$TopicName <- topics.names[LDA.model.topics.df$Topic]
dtm.df <- merge(x = dtm.df, y = LDA.model.topics.df)
table(dtm.df$Party, dtm.df$TopicName)
# Chunk 25
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$TopicName)))
# Chunk 26
k <- 10
LDA.model <-LDA(dtm, k, method="Gibbs", control = list(nstart = nstart,
seed = seed, best = best,
burnin = burnin, iter = iter,
thin = thin))
LDA.model.topics <- as.matrix(topics(LDA.model))
table(c(1:k, LDA.model.topics))
#write.csv(LDA.model.topics, file = paste("./output/LDAGibbs", k, "DocsToTopics.csv"))
#top 20 terms in each topic
LDA.model.terms <- as.matrix(terms(LDA.model, 20))
#write.csv(LDA.model.terms, file = paste("./output/LDAGibbs", k, "TopicsToTerms.csv"))
#probabilities associated with each topic assignment
LDA.model.prob <- as.data.frame(LDA.model@gamma)
#write.csv(LDA.model.prob, file = paste("./output/LDAGibbs", k, "TopicProbabilities.csv"))
head(LDA.model.terms)
# Chunk 27
topics.names <- c("Liberalism", "Law", "Belief", "Progress", "Union", "Nation", "Government", "America", "Conflict", "Country" )
#Find relative importance of top 2 topics
topic1ToTopic2 <- lapply(1:nrow(dtm), function(x)
sort(LDA.model.prob[x,])[k]/sort(LDA.model.prob[x,])[k-1])
#write to file
#write.csv(topic1ToTopic2, file = paste("./output/LDAGibbs", k, "Topic1ToTopic2.csv"))
#Merge the topic information with previous dataframe
LDA.model.topics.df <- as.data.frame(as.matrix(topics(LDA.model)))
LDA.model.topics.df$Key <- rownames(as.matrix(topics(LDA.model)))
names(LDA.model.topics.df) <- c(paste("Topic ",k), "Key")
LDA.model.topics.df$TopicName2 <- topics.names[LDA.model.topics.df$Topic]
dtm.df <- merge(x = dtm.df, y = LDA.model.topics.df)
table(dtm.df$Party, dtm.df$TopicName2)
table(dtm.df$TopicName2, dtm.df$Party)
ggplot(data = as.data.frame(PCA.model$x[,1:2]), aes(PC1, PC2)) +
geom_point(aes(col = as.factor(dtm.df$TopicName2)))
table(dtm.df[ ,c("Party", "Cluster2")])
table(dtm.df[ ,c("Party", "Cluster3")])
match(1, dtm.df$Cluster3)
dtm.fr[50,]$Party
dtm.dr[50,]$Party
dtm.df[50,]$Party
table(dtm.df[ ,c("Party", "Cluster2")])
table(dtm.df[ ,c("Party", "Cluster3")])
table(dtm.df[ ,c("Party", "Cluster4")])
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 5, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
dtm.df$Cluster5 <- Cluster.model5$cluster
table(dtm.df[ ,c("Party", "Cluster2")])
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 5, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
dtm.df$Cluster5 <- Cluster.model5$cluster
Cluster.model2 <- kmeans(dtm, 2, iter.max = 15, nstart = 20)
Cluster.model3 <- kmeans(dtm, 3, iter.max = 15, nstart = 20)
Cluster.model4 <- kmeans(dtm, 4, iter.max = 15, nstart = 20)
Cluster.model5 <- kmeans(dtm, 5, iter.max = 15, nstart = 20)
dtm.df$Cluster2 <- Cluster.model2$cluster
dtm.df$Cluster3 <- Cluster.model3$cluster
dtm.df$Cluster4 <- Cluster.model4$cluster
dtm.df$Cluster5 <- Cluster.model5$cluster
table(dtm.df[ ,c("Party", "Cluster2")])
table(dtm.df[ ,c("Party", "Cluster3")])
table(dtm.df[ ,c("Party", "Cluster4")])
table(dtm.df[ ,c("Party", "Cluster5")])
PCA.model <- prcomp(dtm)
plot((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, type = "l", col = "blue", ylab = "Prop. of Variance", xlab = "PC")
points((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100, pch = 22, bg = "red")
?cumsum
PCA.model <- prcomp(dtm)
plot(cumsum((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100), type = "l", col = "blue", ylab = "Prop. of Variance", xlab = "PC")
points(cumsum((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100), pch = 22, bg = "red")
par(mfrow=c(1,1))
PCA.model <- prcomp(dtm)
plot(cumsum((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100), type = "l", col = "blue", ylab = "Prop. of Variance", xlab = "PC")
points(cumsum((PCA.model$sdev^2)/sum(PCA.model$sdev^2)*100), pch = 22, bg = "red")
